{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // Validate if the species already exists\n  try {\n    const checkResponse = await fetch(`http://localhost:5000/WildLife_API/species/check?name=${encodeURIComponent(name)}`);\n    if (checkResponse.ok) {\n      const exists = await checkResponse.json();\n      if (exists.exists) {\n        setMessage('Species already exists. Please add a different species.');\n        return; // Exit if species already exists\n      } else {\n        // Species does not exist, proceed to add it\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('scientific_name', scientificName);\n        formData.append('status', status);\n        formData.append('causes', causes);\n        formData.append('population', population);\n        formData.append('image', image); // For file URL or image URL\n\n        try {\n          const response = await fetch('http://localhost:5000/WildLife_API/species', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setMessage('Species added successfully!');\n            onAdd(data); // Optionally, update parent state\n          } else {\n            const errorText = await response.text(); // Capture server error message if available\n            setMessage(`Failed to add species. Server returned: ${errorText}`);\n          }\n        } catch (error) {\n          console.error('Error adding species:', error);\n          setMessage('An error occurred while adding the species.');\n        }\n\n        // Reset form fields after successful submission\n        setName('');\n        setScientificName('');\n        setStatus('');\n        setCauses('');\n        setPopulation('');\n        setImage('');\n      }\n    } else {\n      const errorText = await checkResponse.text(); // Capture server error message if available\n      setMessage(`Failed to validate species. Server returned: ${errorText}`);\n      return;\n    }\n  } catch (error) {\n    console.error('Error validating species:', error);\n    setMessage('An error occurred during validation.');\n    return;\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","checkResponse","fetch","encodeURIComponent","name","ok","exists","json","setMessage","formData","FormData","append","scientificName","status","causes","population","image","response","method","body","data","onAdd","errorText","text","error","console","setName","setScientificName","setStatus","setCauses","setPopulation","setImage"],"sources":["E:/EndangeraProtect/EndageraFrontend/src/components/AddSpeciesForm.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Validate if the species already exists\r\n  try {\r\n    const checkResponse = await fetch(`http://localhost:5000/WildLife_API/species/check?name=${encodeURIComponent(name)}`);\r\n\r\n    if (checkResponse.ok) {\r\n      const exists = await checkResponse.json();\r\n\r\n      if (exists.exists) {\r\n        setMessage('Species already exists. Please add a different species.');\r\n        return;  // Exit if species already exists\r\n      } else {\r\n        // Species does not exist, proceed to add it\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('scientific_name', scientificName);\r\n        formData.append('status', status);\r\n        formData.append('causes', causes);\r\n        formData.append('population', population);\r\n        formData.append('image', image);  // For file URL or image URL\r\n\r\n        try {\r\n          const response = await fetch('http://localhost:5000/WildLife_API/species', {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setMessage('Species added successfully!');\r\n            onAdd(data); // Optionally, update parent state\r\n          } else {\r\n            const errorText = await response.text(); // Capture server error message if available\r\n            setMessage(`Failed to add species. Server returned: ${errorText}`);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding species:', error);\r\n          setMessage('An error occurred while adding the species.');\r\n        }\r\n\r\n        // Reset form fields after successful submission\r\n        setName('');\r\n        setScientificName('');\r\n        setStatus('');\r\n        setCauses('');\r\n        setPopulation('');\r\n        setImage('');\r\n      }\r\n    } else {\r\n      const errorText = await checkResponse.text(); // Capture server error message if available\r\n      setMessage(`Failed to validate species. Server returned: ${errorText}`);\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error validating species:', error);\r\n    setMessage('An error occurred during validation.');\r\n    return;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,yDAAyDC,kBAAkB,CAACC,IAAI,CAAC,EAAE,CAAC;IAEtH,IAAIH,aAAa,CAACI,EAAE,EAAE;MACpB,MAAMC,MAAM,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,CAAC;MAEzC,IAAID,MAAM,CAACA,MAAM,EAAE;QACjBE,UAAU,CAAC,yDAAyD,CAAC;QACrE,OAAO,CAAE;MACX,CAAC,MAAM;QACL;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;QAC7BK,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEC,cAAc,CAAC;QAClDH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEE,MAAM,CAAC;QACjCJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEG,MAAM,CAAC;QACjCL,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEI,UAAU,CAAC;QACzCN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEK,KAAK,CAAC,CAAC,CAAE;;QAElC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC,4CAA4C,EAAE;YACzEgB,MAAM,EAAE,MAAM;YACdC,IAAI,EAAEV;UACR,CAAC,CAAC;UAEF,IAAIQ,QAAQ,CAACZ,EAAE,EAAE;YACf,MAAMe,IAAI,GAAG,MAAMH,QAAQ,CAACV,IAAI,CAAC,CAAC;YAClCC,UAAU,CAAC,6BAA6B,CAAC;YACzCa,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC;UACf,CAAC,MAAM;YACL,MAAME,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;YACzCf,UAAU,CAAC,2CAA2Cc,SAAS,EAAE,CAAC;UACpE;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7ChB,UAAU,CAAC,6CAA6C,CAAC;QAC3D;;QAEA;QACAkB,OAAO,CAAC,EAAE,CAAC;QACXC,iBAAiB,CAAC,EAAE,CAAC;QACrBC,SAAS,CAAC,EAAE,CAAC;QACbC,SAAS,CAAC,EAAE,CAAC;QACbC,aAAa,CAAC,EAAE,CAAC;QACjBC,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,MAAM;MACL,MAAMT,SAAS,GAAG,MAAMrB,aAAa,CAACsB,IAAI,CAAC,CAAC,CAAC,CAAC;MAC9Cf,UAAU,CAAC,gDAAgDc,SAAS,EAAE,CAAC;MACvE;IACF;EACF,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjDhB,UAAU,CAAC,sCAAsC,CAAC;IAClD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}