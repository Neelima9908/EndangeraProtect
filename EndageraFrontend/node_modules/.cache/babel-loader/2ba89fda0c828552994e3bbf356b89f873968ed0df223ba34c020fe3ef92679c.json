{"ast":null,"code":"var _jsxFileName = \"E:\\\\EndangeraProtect\\\\EndageraFrontend\\\\src\\\\pages\\\\Actions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Actions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Actions = () => {\n  _s();\n  const [type, setType] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [species_id, setSpeciesId] = useState('');\n  const [message, setMessage] = useState(''); // To display success/error messages\n  const [actions, setActions] = useState([]); // Store actions locally\n\n  const handleAddAction = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        type,\n        description,\n        date,\n        species_id\n      };\n      console.log(payload);\n      const response = await fetch('http://localhost:5000/Actions_API/actions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        const newAction = await response.json();\n        setMessage('Action added successfully!');\n        setActions(prevActions => [...prevActions, newAction]); // Add new action to the list\n\n        // Reset form fields\n        setType('');\n        setDescription('');\n        setDate('');\n        setSpeciesId('');\n      } else {\n        const errorText = await response.text();\n        setMessage(`Failed to add action. Server returned: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error adding action:', error);\n      setMessage('An error occurred while adding the action.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddAction,\n        className: \"add-action-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type\",\n          value: type,\n          onChange: e => setType(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Species ID\",\n          value: species_id,\n          onChange: e => setSpeciesId(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Add Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Action List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [action.type, \" - \", action.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/ark.avif\",\n        alt: \"Wildlife\",\n        className: \"sidebar-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Actions, \"lqFVV19eivpv6Zj0GcNXXJ7HekU=\");\n_c = Actions;\nexport default Actions;\nvar _c;\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Actions","_s","type","setType","description","setDescription","date","setDate","species_id","setSpeciesId","message","setMessage","actions","setActions","handleAddAction","e","preventDefault","payload","console","log","response","fetch","method","headers","body","JSON","stringify","ok","newAction","json","prevActions","errorText","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","map","action","index","src","alt","_c","$RefreshReg$"],"sources":["E:/EndangeraProtect/EndageraFrontend/src/pages/Actions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Actions.css';\r\n\r\nconst Actions = () => {\r\n  const [type, setType] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [species_id, setSpeciesId] = useState('');\r\n  const [message, setMessage] = useState(''); // To display success/error messages\r\n  const [actions, setActions] = useState([]); // Store actions locally\r\n\r\n  const handleAddAction = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const payload = { type, description, date, species_id };\r\n      console.log(payload);\r\n      const response = await fetch('http://localhost:5000/Actions_API/actions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newAction = await response.json();\r\n        setMessage('Action added successfully!');\r\n        setActions((prevActions) => [...prevActions, newAction]); // Add new action to the list\r\n\r\n        // Reset form fields\r\n        setType('');\r\n        setDescription('');\r\n        setDate('');\r\n        setSpeciesId('');\r\n      } else {\r\n        const errorText = await response.text();\r\n        setMessage(`Failed to add action. Server returned: ${errorText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding action:', error);\r\n      setMessage('An error occurred while adding the action.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"actions-container\">\r\n      <div className=\"actions-content\">\r\n        <h2>Actions</h2>\r\n        {message && <p className=\"message\">{message}</p>}\r\n\r\n        <form onSubmit={handleAddAction} className=\"add-action-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type\"\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Species ID\"\r\n            value={species_id}\r\n            onChange={(e) => setSpeciesId(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n          <button type=\"submit\" className=\"form-button\">Add Action</button>\r\n        </form>\r\n\r\n        <h3>Action List:</h3>\r\n        <ul>\r\n          {actions.map((action, index) => (\r\n            <li key={index}>\r\n              {action.type} - {action.description}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"image-container\">\r\n        <img src=\"/assets/ark.avif\" alt=\"Wildlife\" className=\"sidebar-image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,UAAU,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMiB,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,GAAG;QAAEf,IAAI;QAAEE,WAAW;QAAEE,IAAI;QAAEE;MAAW,CAAC;MACvDU,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvClB,UAAU,CAAC,4BAA4B,CAAC;QACxCE,UAAU,CAAEiB,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEF,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE1D;QACAzB,OAAO,CAAC,EAAE,CAAC;QACXE,cAAc,CAAC,EAAE,CAAC;QAClBE,OAAO,CAAC,EAAE,CAAC;QACXE,YAAY,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM;QACL,MAAMsB,SAAS,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACvCrB,UAAU,CAAC,0CAA0CoB,SAAS,EAAE,CAAC;MACnE;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CtB,UAAU,CAAC,4CAA4C,CAAC;IAC1D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKmC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCpC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BpC,OAAA;QAAAoC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACf7B,OAAO,iBAAIX,OAAA;QAAGmC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEzB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhDxC,OAAA;QAAMyC,QAAQ,EAAE1B,eAAgB;QAACoB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC1DpC,OAAA;UACEG,IAAI,EAAC,MAAM;UACXuC,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAExC,IAAK;UACZyC,QAAQ,EAAG5B,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;UACRX,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFxC,OAAA;UACEG,IAAI,EAAC,MAAM;UACXuC,WAAW,EAAC,aAAa;UACzBC,KAAK,EAAEtC,WAAY;UACnBuC,QAAQ,EAAG5B,CAAC,IAAKV,cAAc,CAACU,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;UACRX,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFxC,OAAA;UACEG,IAAI,EAAC,MAAM;UACXwC,KAAK,EAAEpC,IAAK;UACZqC,QAAQ,EAAG5B,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;UACRX,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFxC,OAAA;UACEG,IAAI,EAAC,QAAQ;UACbuC,WAAW,EAAC,YAAY;UACxBC,KAAK,EAAElC,UAAW;UAClBmC,QAAQ,EAAG5B,CAAC,IAAKN,YAAY,CAACM,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAC9CG,QAAQ;UACRX,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFxC,OAAA;UAAQG,IAAI,EAAC,QAAQ;UAACgC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eAEPxC,OAAA;QAAAoC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBxC,OAAA;QAAAoC,QAAA,EACGvB,OAAO,CAACkC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBjD,OAAA;UAAAoC,QAAA,GACGY,MAAM,CAAC7C,IAAI,EAAC,KAAG,EAAC6C,MAAM,CAAC3C,WAAW;QAAA,GAD5B4C,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENxC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BpC,OAAA;QAAKkD,GAAG,EAAC,kBAAkB;QAACC,GAAG,EAAC,UAAU;QAAChB,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAjGID,OAAO;AAAAmD,EAAA,GAAPnD,OAAO;AAmGb,eAAeA,OAAO;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}