{"ast":null,"code":"var _jsxFileName = \"E:\\\\EndangeraProtect\\\\EndageraFrontend\\\\src\\\\components\\\\AddSpeciesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSpeciesForm = ({\n  onAdd\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [scientificName, setScientificName] = useState('');\n  const [status, setStatus] = useState('');\n  const [causes, setCauses] = useState('');\n  const [population, setPopulation] = useState('');\n  const [image, setImage] = useState(null); // For file upload\n  const [message, setMessage] = useState(''); // To display success/error messages\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if the species already exists\n    try {\n      const checkResponse = await fetch(`http://localhost:5000/WildLife_API/species/check?name=${encodeURIComponent(name)}`);\n      console.log(checkResponse);\n      if (checkResponse.ok) {\n        const exists = await checkResponse.json();\n        console.log(exists);\n        if (exists.exists) {\n          setMessage('Species already exists. Please add a different species.');\n          return; // Exit if species already exists\n        } else {\n          // Species does not exist, proceed to add it\n          const formData = new FormData();\n          formData.append('name', name);\n          formData.append('scientific_name', scientificName);\n          formData.append('status', status);\n          formData.append('population', population);\n          formData.append('causes', causes);\n          formData.append('image', image); // For file URL or image URL\n\n          try {\n            const response = await fetch('http://localhost:5000/WildLife_API/species', {\n              method: 'POST',\n              body: formData\n            });\n            console.log(response);\n            if (response.ok) {\n              const data = await response.json();\n              setMessage('Species added successfully!');\n              onAdd(data); // Optionally, update parent state\n            } else {\n              const errorText = await response.text(); // Capture server error message if available\n              setMessage(`Failed to add species. Server returned: ${errorText}`);\n            }\n          } catch (error) {\n            console.error('Error adding species:', error);\n            setMessage('An error occurred while adding the species.');\n          }\n\n          // Reset form fields after successful submission\n          setName('');\n          setScientificName('');\n          setStatus('');\n          setPopulation('');\n          setCauses('');\n          setImage('');\n        }\n      } else {\n        const errorText = await checkResponse.text(); // Capture server error message if available\n        setMessage(`Failed to validate species. Server returned: ${errorText}`);\n        return;\n      }\n    } catch (error) {\n      console.error('Error validating species:', error);\n      setMessage('An error occurred during validation.');\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-species-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-species-form\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Species Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Scientific Name\",\n        value: scientificName,\n        onChange: e => setScientificName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Conservation Status\",\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Causes of Threat\",\n        value: causes,\n        onChange: e => setCauses(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Population\",\n        value: population,\n        onChange: e => setPopulation(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setImage(e.target.value) // Capture the URL instead of file\n        ,\n        placeholder: \"Enter image URL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSpeciesForm, \"LqLeclWt7a1FD/ZwQZQOCfua9Gw=\");\n_c = AddSpeciesForm;\nexport default AddSpeciesForm;\nvar _c;\n$RefreshReg$(_c, \"AddSpeciesForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddSpeciesForm","onAdd","_s","name","setName","scientificName","setScientificName","status","setStatus","causes","setCauses","population","setPopulation","image","setImage","message","setMessage","handleSubmit","e","preventDefault","checkResponse","fetch","encodeURIComponent","console","log","ok","exists","json","formData","FormData","append","response","method","body","data","errorText","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/EndangeraProtect/EndageraFrontend/src/components/AddSpeciesForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddSpeciesForm = ({ onAdd }) => {\r\n  const [name, setName] = useState('');\r\n  const [scientificName, setScientificName] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [causes, setCauses] = useState('');\r\n  const [population, setPopulation] = useState('');\r\n  const [image, setImage] = useState(null); // For file upload\r\n  const [message, setMessage] = useState(''); // To display success/error messages\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Validate if the species already exists\r\n    try {\r\n      const checkResponse = await fetch(`http://localhost:5000/WildLife_API/species/check?name=${encodeURIComponent(name)}`);\r\n      console.log(checkResponse);\r\n      if (checkResponse.ok) {\r\n        const exists = await checkResponse.json();\r\n        console.log(exists);\r\n        if (exists.exists) {\r\n          setMessage('Species already exists. Please add a different species.');\r\n          return;  // Exit if species already exists\r\n        } else {\r\n          // Species does not exist, proceed to add it\r\n          const formData = new FormData();\r\n          formData.append('name', name);\r\n          formData.append('scientific_name', scientificName);\r\n          formData.append('status', status);\r\n          formData.append('population', population);\r\n          formData.append('causes', causes);\r\n          formData.append('image', image);  // For file URL or image URL\r\n  \r\n          try {\r\n            const response = await fetch('http://localhost:5000/WildLife_API/species', {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n            console.log(response);\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setMessage('Species added successfully!');\r\n              onAdd(data); // Optionally, update parent state\r\n            } else {\r\n              const errorText = await response.text(); // Capture server error message if available\r\n              setMessage(`Failed to add species. Server returned: ${errorText}`);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error adding species:', error);\r\n            setMessage('An error occurred while adding the species.');\r\n          }\r\n  \r\n          // Reset form fields after successful submission\r\n          setName('');\r\n          setScientificName('');\r\n          setStatus('');\r\n          setPopulation('');\r\n          setCauses('');\r\n          setImage('');\r\n        }\r\n      } else {\r\n        const errorText = await checkResponse.text(); // Capture server error message if available\r\n        setMessage(`Failed to validate species. Server returned: ${errorText}`);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error validating species:', error);\r\n      setMessage('An error occurred during validation.');\r\n      return;\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"add-species-form-container\">\r\n      <h2>Add a New Species</h2>\r\n      <form onSubmit={handleSubmit} className=\"add-species-form\" encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Species Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Scientific Name\"\r\n          value={scientificName}\r\n          onChange={(e) => setScientificName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Conservation Status\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Causes of Threat\"\r\n          value={causes}\r\n          onChange={(e) => setCauses(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Population\"\r\n          value={population}\r\n          onChange={(e) => setPopulation(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setImage(e.target.value)}  // Capture the URL instead of file\r\n          placeholder=\"Enter image URL\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Add Species</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSpeciesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}