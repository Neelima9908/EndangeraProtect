{"ast":null,"code":"var _jsxFileName = \"E:\\\\EndangeraProtect\\\\EndageraFrontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Replace with your actual API logic imports\n// import { registerUser, loginUser } from 'http://localhost:5000/Users_API/users';\nimport '../styles/Profile.css'; // Make sure to include styles for better UI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isLoginMode) {\n        // Login logic\n        console.log(`Login attempted with email: ${email}`);\n        // Simulate login API call\n      } else {\n        // Signup logic\n        console.log(`Signup attempted with name: ${name}, email: ${email}`);\n        // Simulate signup API call\n      }\n    } catch (error) {\n      console.error('Error during form submission:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLoginMode ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: !isLoginMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"action-button\",\n        children: isLoginMode ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLoginMode(prevMode => !prevMode),\n      className: \"toggle-button\",\n      children: [\"Switch to \", isLoginMode ? 'Sign Up' : 'Login']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"X7pr2SClY2N+m3GSLaN9EXI9dQM=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Profile","_s","isLoginMode","setIsLoginMode","email","setEmail","password","setPassword","name","setName","handleSubmit","e","preventDefault","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","prevMode","_c","$RefreshReg$"],"sources":["E:/EndangeraProtect/EndageraFrontend/src/pages/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// Replace with your actual API logic imports\r\n// import { registerUser, loginUser } from 'http://localhost:5000/Users_API/users';\r\nimport '../styles/Profile.css'; // Make sure to include styles for better UI\r\n\r\nconst Profile = () => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (isLoginMode) {\r\n        // Login logic\r\n        console.log(`Login attempted with email: ${email}`);\r\n        // Simulate login API call\r\n      } else {\r\n        // Signup logic\r\n        console.log(`Signup attempted with name: ${name}, email: ${email}`);\r\n        // Simulate signup API call\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during form submission:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"learn-container\">\r\n      <h1>{isLoginMode ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {!isLoginMode && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required={!isLoginMode}\r\n          />\r\n        )}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"action-button\">\r\n          {isLoginMode ? 'Login' : 'Sign Up'}\r\n        </button>\r\n      </form>\r\n      <button\r\n        onClick={() => setIsLoginMode((prevMode) => !prevMode)}\r\n        className=\"toggle-button\"\r\n      >\r\n        Switch to {isLoginMode ? 'Sign Up' : 'Login'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}